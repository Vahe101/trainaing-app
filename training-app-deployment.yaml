apiVersion: v1
kind: Namespace
metadata:
  name: training-app-namespace

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: training-app-deployment
  namespace: training-app-namespace
spec:
  replicas: 3
  selector:
    matchLabels:
      app: training-app
  template:
    metadata:
      labels:
        app: training-app
    spec:
      containers:
        - name: training-app-api-gateway
          image: training-app-api-gateway
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"

---
apiVersion: v1
kind: Service
metadata:
  name: training-api-gateway-service
  namespace: training-app-namespace
spec:
  selector:
    app: training-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: training-app-namespace
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgresql

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: training-app-namespace
spec:
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:14
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: training-app
            - name: POSTGRES_USER
              value: testuser
            - name: POSTGRES_PASSWORD
              value: testpassword
            - name: POSTGRES_LISTEN_ADDRESSES
              value: "*"
          volumeMounts:
            - name: postgresql-config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
      volumes:
        - name: postgresql-config
          configMap:
            name: postgresql-config

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: training-app-namespace
spec:
  type: NodePort # <-- Change from ClusterIP to NodePort
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 30001 # <-- NodePort should be in the range 30000-32767
  selector:
    app: postgresql

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: training-app-namespace
spec:
  ports:
    - port: 5672 # AMQP port
      targetPort: 5672
  selector:
    app: rabbitmq

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: training-app-namespace
spec:
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          ports:
            - containerPort: 5672
            - containerPort: 15672
